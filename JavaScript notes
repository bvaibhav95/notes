>>>Creating object
    var myCar = new Object();
    myCar.speed = 50;
    myCar.color = "red";
    myCar.drive = function(){
      console.log("Now driving...");
    }
    
    =====OR JSON formatted=====
    
    var myCar = {
      speed : 50;
      color : "red";
      drive : function(){
        console.log("Now driving...");
      } 
    }
    
    
    =====OR Factory pattern=====
    
    var Car = function(speed, color){
    	var temp = {};
	temp.speed = speed;
	temp.color = color;
	
	return temp;
    }
    
    var myCar = Car(50, "red");
    
    =====OR (prototype pattern)=====
    var Car = function(){};
    Car.prototype.speed = 0;
    Car.prototype.color = "blank";
    Car.prototype.drive = function(){
    	console.log("Now driving...");
    };
    
    var myCar = new Car();
    myCar.speed = 50;
    myCar.color = "red";
    
    
>>>Creating constructor
var Car = function(speed, color){
	this.speed = speed;
	this.color = color;
	this.drive = function(){
		console.log("Now driving...");
	}
}

var myCar = new Car(50, "white");
>>>Javascript has no formal support for class creation
   In javascript every function exp is a constructor.
   
>>>Javascript is single threaded...i.e.only one script can run at a time.
AJAX is non-blocking...it's not multi-threading

>>>Closures & Promises in javascript...
