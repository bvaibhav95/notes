https://medium.com/@evangow/server-authentication-basics-express-sessions-passport-and-curl-359b7456003d
https://hacks.mozilla.org/2012/12/using-secure-client-side-sessions-to-build-simple-and-scalable-node-js-applications-a-node-js-holiday-season-part-3/
https://dzone.com/articles/securing-nodejs-managing-sessions-in-expressjs
Securing nodejs app --> https://lockmedown.com/user-account-requirements-express-js/

HTTP is stateless: there is no link between two requests being successively carried out on the same connection. This immediately has the prospect of being problematic for users attempting to interact with certain pages coherently, for example, using e-commerce shopping baskets. But while the core of HTTP itself is stateless, HTTP cookies allow the use of stateful sessions. Using header extensibility, HTTP Cookies are added to the workflow, allowing session creation on each HTTP request to share the same context, or the same state

https://dzone.com/articles/securing-nodejs-managing-sessions-in-expressjs
Authentication working mechanism - https://medium.com/@evangow/server-authentication-basics-express-sessions-passport-and-curl-359b7456003d
